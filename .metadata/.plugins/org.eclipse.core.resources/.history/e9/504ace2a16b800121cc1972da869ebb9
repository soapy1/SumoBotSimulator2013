/*
 * Class that controls all the physics we need
 */

package code.busters.sumobots;

public class SimulationPhysics {
	
	private boolean moving = false;
	
	public double getForceApp(){
		return BuildState.roboMotorOne.getTorque()/(BuildState.roboMotorOne.getShaft()/(2*10E2));	
	}
	
	public boolean getMoving(){
		return moving;
	}
	
	public double getForceFriction(){
		double f;
		if (moving == true){
			f = BuildState.RWeight*BuildState.roboWheel.getMu();
		}else{
			f = 0;
		}
		return f;
	}
	
	public double getNetForce(){
		return getForceApp()-getForceFriction();
	}
	
	public double getWeight(){
		return BuildState.RWeight*9.8;
	}
	
	public double getAccel(){
		return (getNetForce()/BuildState.RWeight);
	}
	
	public double getSpeed(){
		double s = Math.sqrt(getForceApp()*(BuildState.roboWheel.getDiam()/2)/BuildState.RWeight);
		return s;
	}
	
	public void setMoving(boolean move){
		moving = move; 
	}
	
}
