package code.busters.sumobots;

/*
 * The main driver class for the program.  Anything that goes happens in the program happens here. 
 */

//http://www.javacodegeeks.com/2012/12/escaping-the-jvm-heap-for-memory-intensive-applications.html
//http://cnx.org/content/m45733/latest/?collection=col11489/latest
//http://cnx.org/content/m45737/latest/?collection=col11489/latest


import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.StateBasedGame;
import java.awt.SplashScreen;

/*
 *  java -splash:SumoBotSimulator2013/SumoBotSimulator2013/res/sumobotsimsplash.png -jar sssumo.jar 
 */

public class MainSim extends StateBasedGame {
		
		public static int WinX = 800;
		public static int WinY = 600;
		public static boolean loaded = false;
		Image splash;
		
        public MainSim() {
        	super("Sumo Bot Simulator 2013");
        }
        
        public void init(GameContainer gc, StateBasedGame sg) throws SlickException {
    		splash = new Image("res/sumobotsimsplash.png");		// Loads image for splash screen
    	}
        
        public void render(GameContainer gc, StateBasedGame sg, Graphics g)	throws SlickException {
    		splash.draw((MainSim.WinX/2)-(splash.getWidth()/2), 
    				(MainSim.WinY/2)-(splash.getHeight()/2));
    		
    	}

    	public void update(GameContainer gc, StateBasedGame sg, int dt) throws SlickException {
    		if (loaded == true){
    			sg.enterState(GameStates.Build.ordinal());
    		}
    	}
        
        
        public static void main(String args[]) throws SlickException {
        	
        	// final SplashScreen splash = SplashScreen.getSplashScreen();
			// if (splash == null){
			//	 System.out.println("No splash screen found");
			// }
			
        	
			
        	
			 AppGameContainer container = new AppGameContainer(new MainSim());
			 container.setDisplayMode(WinX,WinY,false);
			 container.start();
        }
        
        public void initStatesList(GameContainer gc) throws SlickException {
        	this.addState(new BuildState());
        	this.addState(new SimulationState());
       } 
        
}